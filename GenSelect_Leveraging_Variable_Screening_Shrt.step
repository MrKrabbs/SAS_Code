{"creationTimeStamp":"2023-04-07T17:39:34.753Z","modifiedTimeStamp":"2023-04-07T17:39:34.753Z","createdBy":"sasuser1","modifiedBy":"sasuser1","name":"GenSelect_Leveraging_Variable_Screening_Shrt.step","displayName":"GenSelect_Leveraging_Variable_Screening_Shrt.step","localDisplayName":"GenSelect_Leveraging_Variable_Screening_Shrt.step","properties":{},"links":[{"method":"GET","rel":"self","href":"/dataFlows/steps/7190a2e4-8ff3-478d-997f-543524fbc7f8","uri":"/dataFlows/steps/7190a2e4-8ff3-478d-997f-543524fbc7f8","type":"application/vnd.sas.data.flow.step"},{"method":"GET","rel":"alternate","href":"/dataFlows/steps/7190a2e4-8ff3-478d-997f-543524fbc7f8","uri":"/dataFlows/steps/7190a2e4-8ff3-478d-997f-543524fbc7f8","type":"application/vnd.sas.data.flow.step.summary"},{"method":"GET","rel":"up","href":"/dataFlows/steps","uri":"/dataFlows/steps","type":"application/vnd.sas.collection","itemType":"application/vnd.sas.data.flow.step.summary"},{"method":"PUT","rel":"update","href":"/dataFlows/steps/7190a2e4-8ff3-478d-997f-543524fbc7f8","uri":"/dataFlows/steps/7190a2e4-8ff3-478d-997f-543524fbc7f8","type":"application/vnd.sas.data.flow.step","responseType":"application/vnd.sas.data.flow.step"},{"method":"DELETE","rel":"delete","href":"/dataFlows/steps/7190a2e4-8ff3-478d-997f-543524fbc7f8","uri":"/dataFlows/steps/7190a2e4-8ff3-478d-997f-543524fbc7f8"},{"method":"GET","rel":"transferExport","href":"/dataFlows/steps/7190a2e4-8ff3-478d-997f-543524fbc7f8","uri":"/dataFlows/steps/7190a2e4-8ff3-478d-997f-543524fbc7f8","responseType":"application/vnd.sas.transfer.object"},{"method":"PUT","rel":"transferImportUpdate","href":"/dataFlows/steps/7190a2e4-8ff3-478d-997f-543524fbc7f8","uri":"/dataFlows/steps/7190a2e4-8ff3-478d-997f-543524fbc7f8","type":"application/vnd.sas.transfer.object","responseType":"application/vnd.sas.summary"}],"metadataVersion":0.0,"version":2,"type":"code","flowMetadata":{"inputPorts":[{"name":"VariableTbl","displayName":"VariableTbl","localDisplayName":"VariableTbl","minEntries":1,"maxEntries":1,"type":"table"}],"outputPorts":[]},"ui":"{\n\t\"showPageContentOnly\": true,\n\t\"pages\": [\n\t\t{\n\t\t\t\"id\": \"MainGLM_Page\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"MainGLM_Page\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"VariableTbl\",\n\t\t\t\t\t\"type\": \"inputtable\",\n\t\t\t\t\t\"label\": \"Table for GLM\",\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"colselInterval\",\n\t\t\t\t\t\"type\": \"columnselector\",\n\t\t\t\t\t\"label\": \"Select Interval Inputs\",\n\t\t\t\t\t\"order\": true,\n\t\t\t\t\t\"columntype\": \"a\",\n\t\t\t\t\t\"max\": 100,\n\t\t\t\t\t\"min\": 0,\n\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\"table\": \"VariableTbl\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"colselNominal\",\n\t\t\t\t\t\"type\": \"columnselector\",\n\t\t\t\t\t\"label\": \"Select Class Variables\",\n\t\t\t\t\t\"order\": false,\n\t\t\t\t\t\"columntype\": \"a\",\n\t\t\t\t\t\"max\": 100,\n\t\t\t\t\t\"min\": 0,\n\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\"table\": \"VariableTbl\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"radioSelection\",\n\t\t\t\t\t\"type\": \"radiogroup\",\n\t\t\t\t\t\"label\": \"GLM Selection Method\",\n\t\t\t\t\t\"items\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"None\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"Stepwise\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"Forward\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"Backward\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"Lasso\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"text1\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"text\": \"If you are using model selction (stepwise,forward...) and want specific variables to be in the model regardless of selection outcome, you can select those variables below:\",\n\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\"$radioSelection\",\n\t\t\t\t\t\t\"!=\",\n\t\t\t\t\t\t\"None\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"colselKeepInModel\",\n\t\t\t\t\t\"type\": \"columnselector\",\n\t\t\t\t\t\"label\": \"Variables that selection cannot drop\",\n\t\t\t\t\t\"order\": false,\n\t\t\t\t\t\"columntype\": \"a\",\n\t\t\t\t\t\"max\": null,\n\t\t\t\t\t\"min\": null,\n\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\"$radioSelection\",\n\t\t\t\t\t\t\"!=\",\n\t\t\t\t\t\t\"None\"\n\t\t\t\t\t],\n\t\t\t\t\t\"table\": \"VariableTbl\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t\"syntaxversion\": \"1.3.0\",\n\t\"values\": {\n\t\t\"VariableTbl\": {\n\t\t\t\"library\": \"DATAFLDR\",\n\t\t\t\"table\": \"SEND2_MODEL\"\n\t\t},\n\t\t\"colselInterval\": [],\n\t\t\"colselNominal\": [],\n\t\t\"radioSelection\": {\n\t\t\t\"value\": \"None\"\n\t\t},\n\t\t\"colselKeepInModel\": []\n\t}\n}","templates":{"SAS":"%let glmIntrvl_List=; \n%let keep_in_Model =;\n%let glmClass_List =;\n\n%let glmIntrvl_List= %_flw_get_column_list(_flw_prefix=colselInterval);;\n\n%if not(&radioSelection.=None) %then \n%do;\n%let keep_in_Model = %_flw_get_column_list(_flw_prefix=colselKeepInModel);\n%end;\n\n%let glmClass_List = %_flw_get_column_list(_flw_prefix=colselNominal);\n\n\n/* %let blankSeparatedList = %_flw_get_column_list(_flw_prefix=colsel4); */\n/* %let commaSeparatedList = %_flw_get_column_list(_flw_prefix=colsel4, _delim=%str(,)); */\n/* %put &commaSeparatedList.; */\n\n/* data _null_; */\n/* call symput(\"commaSeparatedList\",'\"'||tranwrd(\"&commaSeparatedList.\",\",\",'\",\"')||'\"'); */\n/* run; */\n/*  */\n/* %put &commaSeparatedList.; */\n\n%put _All_ ;\n\n%let MDLUZER=&SYSUSERID.;\n%LET ITERATION_NAME=;\n%LET MODEL_NAME = LIABILITY;\n%LET SLCT_MTHD=&radioSelection.;\n\n\ndata _null_;\n\nMax = 100000;\nu = rand(\"Uniform\");          \nk = ceil( Max*u );             \n\ncall symput('file_name',cats('score_',put(k,8.),'.sas')); \nrun;\n\nfilename sfile filesrvc folderpath=\"/Users/&sysuserid./My Folder/OTS_GLM_SCORE_PROGRAMS\"\n\tfilename=\"&file_name.\";\nfilename tempfile temp;\n\n\nproc genselect data=&FLOW_SRC_TABLE. TECH=nrridg maxiter=2000;\npartition role=_PartInd_ (validate='0');\n%if &colselNominal_count. > 0 %then %do; class &glmClass_List.; %end;\n\tmodel &FLOW_TRGT_VAR.= &glmIntrvl_List. &glmClass_List. / \n%if &colselKeepInModel_count > 0 and not(&radioSelection.=None) %then \n%do;\ninclude = (&keep_in_Model.) \n%end;\ndist=&MODEL_DISTRIBUTION.;\n/*  / include=(Gender Marital_Status) dist=tweedie;  */\n/* \tselection method=stepwise(select=aic stop=aic choose=aic) hierarchy=none; */\n/* output out=CASUSER.GLM_OUT predicted copyvars=(_all_); */\n%if &radioSelection = Stepwise %then %do;\tselection method=stepwise;%end;\n%if &radioSelection = Forward %then %do;\tselection method=forward;%end;\n%if &radioSelection = Backward %then %do;\tselection method=backward;%end;\n%if &radioSelection = Lasso %then %do;\tselection method=Lasso;%end;\n/* %if &radioSelection = Stepwise %then %do;\tselection method=stepwise(slentry=0.05 slstay=0.05) hierarchy=single;%end; */\n/* %if &radioSelection = Forward %then %do;\tselection method=forward(slentry=0.05 slstay=0.05) hierarchy=single;%end; */\n/* %if &radioSelection = Backward %then %do;\tselection method=backward(slentry=0.05 slstay=0.05) hierarchy=single;%end; */\n\tods output ParameterEstimates=tempParmeterEstimates FitStatistics=fs_out;\ncode file=tempfile;\nrun;\n\n\n%let x=%sysfunc(fcopy(tempfile, sfile));\n%if &x %then %do;\n%put &x - %sysfunc(sysmsg());\n%end;\nfilename tempfile clear;\nfilename sfile CLEAR;\n\n/* below will deal with how many partitions exists and work accordingly in terms of metrics*/\n%understand_partition ;\n\n/*Below deletes previous work files. That guards against bad data being output should an error arise */\n\nPROC DATASETS LIB=WORK NOLIST NODETAILS;\n\tDELETE SORTTempTableSorted TRNSTransposed FIT_VW ONE_RUN AIC_TABLE \n\t\tTBL_INFO_TRANS EST_SHELL SHELL_TRANS SHELL_VARS_VW SHELL_DT_VW COMPARZZ;\nQUIT;RUN;\n\nPROC SQL noprint;\n\tCREATE table WORK.SORTTempTableSorted AS SELECT T.ROWID,T.Value FROM WORK.FS_OUT as T\nwhere UPCASE(RowID) in ('AIC','AICC','M2LL','ASE');\nQUIT;\n\nPROC TRANSPOSE DATA=WORK.SORTTempTableSorted \n\t\tOUT=WORK.TRNSTransposed(LABEL=\"Transposed WORK.FS_OUT\") PREFIX=Column \n\t\tNAME=Source LABEL=Label ;\n\tVAR Value;\nRUN;\n\nDATA FIT_VW;\n\tSET WORK.TRNSTransposed;\n\tRENAME Column1=TWO_LOG_LIKLIHD Column2=AIC Column3=AICC Column4=ASE;\n\tDROP Source;\nRUN;\n\nPROC SQL noprint;\n\tCREATE TABLE WORK.ONE_RUN AS SELECT DISTINCT \"&ITERATION_NAME\" AS ITERATION_NAME LENGTH=32,\"&MODEL_NAME\" as MODEL_NAME \n\t\tLENGTH=32, \"&file_name\" as MY_CODE_FILE LENGTH=20, t2.AIC \n\t\tlabel='AIC(Smaller is better)', T1.EFFECT LENGTH=32, DATETIME() as RUNTIME format=DATETIME19., \n\t\t\"&SYSUSERID\" as PERSON, \"&SLCT_MTHD\" AS MDL_SLCTN_MTHD LENGTH=40,  t2.TWO_LOG_LIKLIHD, t2.AICC \n\t\tlabel='AICC(Smaller is better)', t2.ASE FROM \n\t\tWORK.tempParmeterEstimates t1 CROSS JOIN WORK.FIT_VW t2 WHERE effect not \n\t\tin ('Dispersion', 'Intercept', 'Power');\nQUIT;\n\nPROC APPEND BASE=DATAFLDR.MODEL_VERSIONS&MDLUZER FORCE DATA=WORK.ONE_RUN;\n\tQUIT;\n\t****************************   END OF VERSION FOR PARAMETER ESTIMATES    *********************************;\n\t******************************THIS WILL ADD A RECORD TO THE VERSION AIC TABLE**********************;\n\nPROC SQL noprint;\n\tCREATE TABLE WORK.AIC_TABLE AS SELECT DISTINCT \"&ITERATION_NAME\" AS ITERATION_NAME LENGTH=32,\"&file_name\" as MY_CODE_FILE LENGTH=20,\n\"&MODEL_NAME\" as MODEL_NAME LENGTH=32, t2.AIC \n\t\tlabel='AIC(Smaller is better)', T1.EFFECT LENGTH=32, DATETIME() as RUNTIME \n\t\tformat=DATETIME19., \"&SYSUSERID\" as PERSON, \"&SLCT_MTHD\" AS MDL_SLCTN_MTHD \n\t\tLENGTH=40, COUNT(DISTINCT T1.EFFECT) AS \n\t\tVARIABLES_IN_MDL, t2.TWO_LOG_LIKLIHD, t2.AICC label='AICC(Smaller is better)', \n\t\tt2.ASE FROM WORK.tempParmeterEstimates t1 CROSS JOIN \n\t\tWORK.FIT_VW t2 WHERE effect not in ('Dispersion', 'Intercept','Power');\nQUIT;\n\nproc transpose data=WORK.AIC_TABLE out=WORK.TBL_INFO_TRANS(DROP=SOURCE) \n\t\tprefix=VAR_RTM name=Source label=Label;\n\tby ITERATION_NAME AIC RUNTIME MDL_SLCTN_MTHD TWO_LOG_LIKLIHD AICC \n\t\t ASE MODEL_NAME PERSON VARIABLES_IN_MDL MY_CODE_FILE;\n\tvar Effect;\n\t*COPY AIC RUNTIME PERSON MDL_SLCTN_MTHD MDL_SLCTN_SIG_LVL TWO_LOG_LIKLIHD AICC BIC PersonChiSq_Mdl PearsonDF_Mdl;\nrun;\n\n*BELOW WILL EQUAL 1 IF DATASET EXISTS, WILL EQUAL ZERO IF IT DOES NOT;\n\n%MACRO MY_APPND;\n\t%IF %sysfunc(exist(DATAFLDR.TBL_MODEL_INFO&MDLUZER, data)) %THEN\n\t\t%DO;\n\n\t\t\tDATA DATAFLDR.TBL_MODEL_INFO&MDLUZER;\n\t\t\t\tSET WORK.TBL_INFO_TRANS DATAFLDR.TBL_MODEL_INFO&MDLUZER;\n\t\t\t%END;\n\t\t%ELSE\n\t\t\t%DO;\n\n\t\t\tDATA DATAFLDR.TBL_MODEL_INFO&MDLUZER;\n\t\t\t\tSET WORK.TBL_INFO_TRANS;\n\t\t\t%END;\n\tRUN;\n\n%MEND MY_APPND;\n\n%MY_APPND;\n\n****************************** END OF PROCESS OF CREATING FILE TO SEND TO CREATE SHELL PROCESS     **********;\n*NEED A SHELL TO HOUSE VARIABLES FROM ALL ITERATIONS BECAUSE NOT ALL ITERATIONS WILL HAVE SAME VARIABLES   ;\n**************************************  CREATE SHELL FOR ALL VARIABLES       **************************************;\n\nproc sql noprint;\n\tcreate table WORK.EST_SHELL as select distinct effect LENGTH=32, \n\t\t\"VARIABLES FROM ALL ITERATIONS\" AS ITERATION_NAME LENGTH=32 from \n\t\tDATAFLDR.MODEL_VERSIONS&MDLUZER;\nquit;\n\nproc transpose data=WORK.EST_SHELL out=WORK.SHELL_TRANS(DROP=SOURCE) \n\t\tprefix=VAR_RTM name=Source label=Label;\n\tby ITERATION_NAME;\n\tvar Effect;\nrun;\n\n*WE WILL ADD 50 YEARS TO TODAYS DATE SO THAT OUR \"VARIABLES FROM ALL ITERATIONS WILL BE ON TOP\" IN TERMS OF MOST RECENT;\n*IN OUR VA AIC TABLE;\n\nDATA WORK.SHELL_DT_VW /VIEW=WORK.SHELL_DT_VW;\n\tSET WORK.SHELL_TRANS;\n\tX=DATETIME();\n\tRUNTIME=intnx('dtyear', X, 50);\n\tFORMAT RUNTIME DATETIME19.;\n\tDROP X;\nrun;\n\n\ndata WORK.SHELL_VARS_VW /VIEW=WORK.SHELL_VARS_VW;\n\tset WORK.SHELL_DT_VW DATAFLDR.TBL_MODEL_INFO&MDLUZER;\n\nrun;\n\n*BELOW WILL TAKE ALL OUR VARIABLES THAT WERE CREATED IN OUR SHELL AND THEN SETUP SO WE CAN COUNT HOW MANY VARIABLES TOTAL;\nproc contents data=WORK.SHELL_TRANS(KEEP=VAR_RTM:) noprint \n\t\tout=shell_vars(KEEP=NAME);\nrun;\n\n*BELOW WILL NOW COUNT THE VARIABLES TO HELP SETUP THE DO LOOP IN THE ARRAY FOR PROPER SORTING;\nPROC SQL noprint;\n\tSELECT COUNT(*) INTO :SHELL_CNT FROM shell_vars;\nQUIT;\n\nRUN;\n\nDATA _NULL_;\n\tCALL SYMPUT('ANCHOR', COMPRESS('MDL_INPT'||PUT(&SHELL_CNT, Z2.)));\n\tCALL SYMPUT('VAR_RTM_END', COMPRESS('VAR_RTM'||&SHELL_CNT));\n\t%LET SHL_PLS_ONE=%EVAL(&SHELL_CNT + 1);\nRUN;\n\n\ndata WORK.COMPARZZ;\n\tFORMAT ITERATION_NAME RUNTIME AIC MDL_INPT01-&ANCHOR;\n\tset WORK.SHELL_VARS_VW;\n\tARRAY ALLDATA(&shell_cnt) VAR_RTM1-&VAR_RTM_END;\n\tARRAY TOPROW(&shell_cnt) $32. _temporary_;\n\tARRAY MDL_INPT(&shell_cnt) $32. MDL_INPT01-&ANCHOR;\n\tRETAIN TOPROW;\n\n\tIF _n_=1 then\n\t\tDO;\n\n\t\t\tDO j=1 to &SHELL_CNT;\n\t\t\t\tTOPROW(j)=ALLDATA(j);\n\t\t\tEND;\n\t\tEND;\n\n\tDO M=1 TO &SHELL_CNT;\n\n\t\tDO L=1 TO &SHELL_CNT;\n\n\t\t\tIF ALLDATA(M)=TOPROW(L) THEN\n\t\t\t\tMDL_INPT(L)=ALLDATA(M);\n\t\tEND;\n\tEND;\n\tDROP J M L VAR_RTM:;\n\nRUN;\n\n/* VA expects specific number of variables, this will create a pre-determined number of input variables */\n%MACRO ADD_DUMMY_VARS;\n\tPROC SORT DATA=WORK.COMPARZZ;\n\t\tBY RUNTIME;\n\tRUN;\n\n\tDATA DATAFLDR.AIC_TBL_&MDLUZER;\n\t\tSET WORK.COMPARZZ;\n\t\tMDL_NBR=.;\n\t\tPREVIOUS_AIC=LAG(AIC);\n\n\t\t%DO A=&SHL_PLS_ONE %TO &NBR_VARS_MAX.;\n\t\t\t%LET TEMPA=%SYSFUNC(PUTN(&A, Z2.));\n\t\t\t%LET NEWVARA=MDL_INPT&TEMPA;\n\t\t\tLENGTH &NEWVARA $32.;\n\t\t\tMDL_INPT&TEMPA=' ';\n\t\t%END;\n\tRUN;\n\n%MEND ADD_DUMMY_VARS;\n\n\n%ADD_DUMMY_VARS;\n\n\n%prnt(DATAFLDR.AIC_TBL_&SYSUSERID.,100);\n"}}